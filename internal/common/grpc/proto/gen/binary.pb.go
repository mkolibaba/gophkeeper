// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.30.2
// source: binary.proto

package gophkeeper

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Binary struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_FileName    *string                `protobuf:"bytes,2,opt,name=file_name,json=fileName"`
	xxx_hidden_Notes       *string                `protobuf:"bytes,3,opt,name=notes"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Binary) Reset() {
	*x = Binary{}
	mi := &file_binary_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Binary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Binary) ProtoMessage() {}

func (x *Binary) ProtoReflect() protoreflect.Message {
	mi := &file_binary_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Binary) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Binary) GetFileName() string {
	if x != nil {
		if x.xxx_hidden_FileName != nil {
			return *x.xxx_hidden_FileName
		}
		return ""
	}
	return ""
}

func (x *Binary) GetNotes() string {
	if x != nil {
		if x.xxx_hidden_Notes != nil {
			return *x.xxx_hidden_Notes
		}
		return ""
	}
	return ""
}

func (x *Binary) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *Binary) SetFileName(v string) {
	x.xxx_hidden_FileName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *Binary) SetNotes(v string) {
	x.xxx_hidden_Notes = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *Binary) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Binary) HasFileName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Binary) HasNotes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Binary) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *Binary) ClearFileName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FileName = nil
}

func (x *Binary) ClearNotes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Notes = nil
}

type Binary_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name     *string
	FileName *string
	Notes    *string
}

func (b0 Binary_builder) Build() *Binary {
	m0 := &Binary{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Name = b.Name
	}
	if b.FileName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_FileName = b.FileName
	}
	if b.Notes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Notes = b.Notes
	}
	return m0
}

type SaveBinaryRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Chunk       *FileChunk             `protobuf:"bytes,1,opt,name=chunk"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_Notes       *string                `protobuf:"bytes,3,opt,name=notes"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SaveBinaryRequest) Reset() {
	*x = SaveBinaryRequest{}
	mi := &file_binary_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveBinaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveBinaryRequest) ProtoMessage() {}

func (x *SaveBinaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_binary_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SaveBinaryRequest) GetChunk() *FileChunk {
	if x != nil {
		return x.xxx_hidden_Chunk
	}
	return nil
}

func (x *SaveBinaryRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *SaveBinaryRequest) GetNotes() string {
	if x != nil {
		if x.xxx_hidden_Notes != nil {
			return *x.xxx_hidden_Notes
		}
		return ""
	}
	return ""
}

func (x *SaveBinaryRequest) SetChunk(v *FileChunk) {
	x.xxx_hidden_Chunk = v
}

func (x *SaveBinaryRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *SaveBinaryRequest) SetNotes(v string) {
	x.xxx_hidden_Notes = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *SaveBinaryRequest) HasChunk() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Chunk != nil
}

func (x *SaveBinaryRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *SaveBinaryRequest) HasNotes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *SaveBinaryRequest) ClearChunk() {
	x.xxx_hidden_Chunk = nil
}

func (x *SaveBinaryRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *SaveBinaryRequest) ClearNotes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Notes = nil
}

type SaveBinaryRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Chunk *FileChunk
	Name  *string
	Notes *string
}

func (b0 SaveBinaryRequest_builder) Build() *SaveBinaryRequest {
	m0 := &SaveBinaryRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Chunk = b.Chunk
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Name = b.Name
	}
	if b.Notes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Notes = b.Notes
	}
	return m0
}

type DownloadBinaryRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DownloadBinaryRequest) Reset() {
	*x = DownloadBinaryRequest{}
	mi := &file_binary_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadBinaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadBinaryRequest) ProtoMessage() {}

func (x *DownloadBinaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_binary_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DownloadBinaryRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *DownloadBinaryRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *DownloadBinaryRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DownloadBinaryRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

type DownloadBinaryRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name *string
}

func (b0 DownloadBinaryRequest_builder) Build() *DownloadBinaryRequest {
	m0 := &DownloadBinaryRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type FileChunk struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ChunkData   []byte                 `protobuf:"bytes,1,opt,name=chunk_data,json=chunkData"`
	xxx_hidden_Filename    *string                `protobuf:"bytes,2,opt,name=filename"`
	xxx_hidden_TotalSize   int64                  `protobuf:"varint,3,opt,name=total_size,json=totalSize"`
	xxx_hidden_ChunkIndex  int32                  `protobuf:"varint,4,opt,name=chunk_index,json=chunkIndex"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *FileChunk) Reset() {
	*x = FileChunk{}
	mi := &file_binary_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileChunk) ProtoMessage() {}

func (x *FileChunk) ProtoReflect() protoreflect.Message {
	mi := &file_binary_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FileChunk) GetChunkData() []byte {
	if x != nil {
		return x.xxx_hidden_ChunkData
	}
	return nil
}

func (x *FileChunk) GetFilename() string {
	if x != nil {
		if x.xxx_hidden_Filename != nil {
			return *x.xxx_hidden_Filename
		}
		return ""
	}
	return ""
}

func (x *FileChunk) GetTotalSize() int64 {
	if x != nil {
		return x.xxx_hidden_TotalSize
	}
	return 0
}

func (x *FileChunk) GetChunkIndex() int32 {
	if x != nil {
		return x.xxx_hidden_ChunkIndex
	}
	return 0
}

func (x *FileChunk) SetChunkData(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_ChunkData = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *FileChunk) SetFilename(v string) {
	x.xxx_hidden_Filename = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *FileChunk) SetTotalSize(v int64) {
	x.xxx_hidden_TotalSize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *FileChunk) SetChunkIndex(v int32) {
	x.xxx_hidden_ChunkIndex = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *FileChunk) HasChunkData() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *FileChunk) HasFilename() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *FileChunk) HasTotalSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *FileChunk) HasChunkIndex() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *FileChunk) ClearChunkData() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ChunkData = nil
}

func (x *FileChunk) ClearFilename() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Filename = nil
}

func (x *FileChunk) ClearTotalSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_TotalSize = 0
}

func (x *FileChunk) ClearChunkIndex() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ChunkIndex = 0
}

type FileChunk_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ChunkData  []byte
	Filename   *string
	TotalSize  *int64
	ChunkIndex *int32
}

func (b0 FileChunk_builder) Build() *FileChunk {
	m0 := &FileChunk{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ChunkData != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ChunkData = b.ChunkData
	}
	if b.Filename != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Filename = b.Filename
	}
	if b.TotalSize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_TotalSize = *b.TotalSize
	}
	if b.ChunkIndex != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_ChunkIndex = *b.ChunkIndex
	}
	return m0
}

type GetAllBinariesResponse struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Result *[]*Binary             `protobuf:"bytes,1,rep,name=result"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetAllBinariesResponse) Reset() {
	*x = GetAllBinariesResponse{}
	mi := &file_binary_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllBinariesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllBinariesResponse) ProtoMessage() {}

func (x *GetAllBinariesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_binary_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetAllBinariesResponse) GetResult() []*Binary {
	if x != nil {
		if x.xxx_hidden_Result != nil {
			return *x.xxx_hidden_Result
		}
	}
	return nil
}

func (x *GetAllBinariesResponse) SetResult(v []*Binary) {
	x.xxx_hidden_Result = &v
}

type GetAllBinariesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Result []*Binary
}

func (b0 GetAllBinariesResponse_builder) Build() *GetAllBinariesResponse {
	m0 := &GetAllBinariesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Result = &b.Result
	return m0
}

var File_binary_proto protoreflect.FileDescriptor

const file_binary_proto_rawDesc = "" +
	"\n" +
	"\fbinary.proto\x12\n" +
	"gophkeeper\x1a\x1bgoogle/protobuf/empty.proto\x1a\n" +
	"data.proto\"O\n" +
	"\x06Binary\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1b\n" +
	"\tfile_name\x18\x02 \x01(\tR\bfileName\x12\x14\n" +
	"\x05notes\x18\x03 \x01(\tR\x05notes\"j\n" +
	"\x11SaveBinaryRequest\x12+\n" +
	"\x05chunk\x18\x01 \x01(\v2\x15.gophkeeper.FileChunkR\x05chunk\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05notes\x18\x03 \x01(\tR\x05notes\"+\n" +
	"\x15DownloadBinaryRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"\x86\x01\n" +
	"\tFileChunk\x12\x1d\n" +
	"\n" +
	"chunk_data\x18\x01 \x01(\fR\tchunkData\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12\x1d\n" +
	"\n" +
	"total_size\x18\x03 \x01(\x03R\ttotalSize\x12\x1f\n" +
	"\vchunk_index\x18\x04 \x01(\x05R\n" +
	"chunkIndex\"D\n" +
	"\x16GetAllBinariesResponse\x12*\n" +
	"\x06result\x18\x01 \x03(\v2\x12.gophkeeper.BinaryR\x06result2\xa1\x02\n" +
	"\rBinaryService\x12A\n" +
	"\x06Upload\x12\x1d.gophkeeper.SaveBinaryRequest\x1a\x16.google.protobuf.Empty(\x01\x12D\n" +
	"\x06GetAll\x12\x16.google.protobuf.Empty\x1a\".gophkeeper.GetAllBinariesResponse\x12?\n" +
	"\x06Remove\x12\x1d.gophkeeper.RemoveDataRequest\x1a\x16.google.protobuf.Empty\x12F\n" +
	"\bDownload\x12!.gophkeeper.DownloadBinaryRequest\x1a\x15.gophkeeper.FileChunk0\x01B\x1bZ\x19gophkeeper/gen;gophkeeperb\beditionsp\xe8\a"

var file_binary_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_binary_proto_goTypes = []any{
	(*Binary)(nil),                 // 0: gophkeeper.Binary
	(*SaveBinaryRequest)(nil),      // 1: gophkeeper.SaveBinaryRequest
	(*DownloadBinaryRequest)(nil),  // 2: gophkeeper.DownloadBinaryRequest
	(*FileChunk)(nil),              // 3: gophkeeper.FileChunk
	(*GetAllBinariesResponse)(nil), // 4: gophkeeper.GetAllBinariesResponse
	(*empty.Empty)(nil),            // 5: google.protobuf.Empty
	(*RemoveDataRequest)(nil),      // 6: gophkeeper.RemoveDataRequest
}
var file_binary_proto_depIdxs = []int32{
	3, // 0: gophkeeper.SaveBinaryRequest.chunk:type_name -> gophkeeper.FileChunk
	0, // 1: gophkeeper.GetAllBinariesResponse.result:type_name -> gophkeeper.Binary
	1, // 2: gophkeeper.BinaryService.Upload:input_type -> gophkeeper.SaveBinaryRequest
	5, // 3: gophkeeper.BinaryService.GetAll:input_type -> google.protobuf.Empty
	6, // 4: gophkeeper.BinaryService.Remove:input_type -> gophkeeper.RemoveDataRequest
	2, // 5: gophkeeper.BinaryService.Download:input_type -> gophkeeper.DownloadBinaryRequest
	5, // 6: gophkeeper.BinaryService.Upload:output_type -> google.protobuf.Empty
	4, // 7: gophkeeper.BinaryService.GetAll:output_type -> gophkeeper.GetAllBinariesResponse
	5, // 8: gophkeeper.BinaryService.Remove:output_type -> google.protobuf.Empty
	3, // 9: gophkeeper.BinaryService.Download:output_type -> gophkeeper.FileChunk
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_binary_proto_init() }
func file_binary_proto_init() {
	if File_binary_proto != nil {
		return
	}
	file_data_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_binary_proto_rawDesc), len(file_binary_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_binary_proto_goTypes,
		DependencyIndexes: file_binary_proto_depIdxs,
		MessageInfos:      file_binary_proto_msgTypes,
	}.Build()
	File_binary_proto = out.File
	file_binary_proto_goTypes = nil
	file_binary_proto_depIdxs = nil
}
