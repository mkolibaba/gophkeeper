version: '3'

vars:
  OUT_PATH: bin/gophkeeper-client
  LOG_OUTPUT: bin/client.log
  SPEW_DUMP_OUTPUT: bin/spew.log

tasks:
  build:
    desc: Build client
    cmds:
      - go build -ldflags "-s -w" -o {{.OUT_PATH}} cmd/client/main.go

  run:
    desc: Run client
    env:
      GRPC_SERVER_ADDRESS: localhost:8080
      LOG_OUTPUT: '{{.LOG_OUTPUT}}'
      LOG_TRUNCATE: true
      SPEW_DUMP_OUTPUT: '{{.SPEW_DUMP_OUTPUT}}'
    cmds:
      - task: build
      - ./{{.OUT_PATH}}

  test:
    desc: Run tests
    cmds:
      - go test ./...

  watch:
    desc: Run client watching
    preconditions:
      - sh: test -n (which watchexec)
        msg: please install watchexec (https://github.com/watchexec/watchexec) to use this task
    cmds:
      - watchexec -r -c -e go --wrap-process session --poll 1000 -- "task client:run"

  log:
    desc: Show client log
    cmds:
      - tail -n 1000 {{.LOG_OUTPUT}}

  spew:
    desc: Show spew log
    cmds:
      - tail -n 1000 {{.SPEW_DUMP_OUTPUT}}

  gen:
    desc: Run gen
    cmds:
      - task: gen:mock

  gen:mock:
    desc: Generate mocks
    deps:
      - install-moq
    cmds:
      - go generate github.com/mkolibaba/gophkeeper/client

  install-moq:
    internal: true
    run: once
    status:
      - command -v moq >/dev/null 2>&1
    cmds:
      - go install github.com/matryer/moq@latest